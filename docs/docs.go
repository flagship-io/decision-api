// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "API Support",
            "url": "https://www.flagship.io",
            "email": "support@flagship.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/activate": {
            "post": {
                "description": "Activate a campaign for a visitor ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Activate a campaign",
                "operationId": "activate",
                "parameters": [
                    {
                        "description": "Campaign activation request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.activateBody"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.errorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.errorMessage"
                        }
                    }
                }
            }
        },
        "/campaigns": {
            "post": {
                "description": "Get all campaigns value and metadata for a visitor ID and context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Get all campaigns for the visitor",
                "operationId": "get-campaigns",
                "parameters": [
                    {
                        "description": "Campaigns request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.campaignsBodySwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.campaignsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.errorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.errorMessage"
                        }
                    }
                }
            }
        },
        "/campaigns/{id}": {
            "post": {
                "description": "Get a single campaign value and metadata for a visitor ID and context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Campaigns"
                ],
                "summary": "Get a single campaigns for the visitor",
                "operationId": "get-campaign",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Campaign ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Campaign request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.campaignsBodySwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.campaignResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.errorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.errorMessage"
                        }
                    }
                }
            }
        },
        "/flags": {
            "post": {
                "description": "Get all flags value and metadata for a visitor ID and context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Flags"
                ],
                "summary": "Get all flags",
                "operationId": "get-flags",
                "parameters": [
                    {
                        "description": "Flag request body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.campaignsBodySwagger"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/handlers.FlagInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.errorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.errorMessage"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "description": "Gets the metrics like memory consumption \u0026 allocation as well as response time histograms to use with monitoring tools",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "Get the current metrics for the running server",
                "operationId": "metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.MetricsResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.FlagInfo": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/handlers.FlagMetadata"
                },
                "value": {}
            }
        },
        "handlers.FlagMetadata": {
            "type": "object",
            "properties": {
                "campaignId": {
                    "type": "string"
                },
                "reference": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "variationGroupId": {
                    "type": "string"
                },
                "variationId": {
                    "type": "string"
                }
            }
        },
        "handlers.MetricsResponse": {
            "type": "object",
            "properties": {
                "cmdline": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "handlers.[name].errors": {
                    "type": "number"
                },
                "handlers.[name].response_time.p50": {
                    "type": "number"
                },
                "handlers.[name].response_time.p90": {
                    "type": "number"
                },
                "handlers.[name].response_time.p95": {
                    "type": "number"
                },
                "handlers.[name].response_time.p99": {
                    "type": "number"
                },
                "memstats": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "handlers.activateBody": {
            "type": "object",
            "required": [
                "caid",
                "cid",
                "vaid",
                "vid"
            ],
            "properties": {
                "aid": {
                    "type": "string"
                },
                "caid": {
                    "type": "string"
                },
                "cid": {
                    "type": "string"
                },
                "vaid": {
                    "type": "string"
                },
                "vid": {
                    "type": "string"
                }
            }
        },
        "handlers.campaignResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "variation": {
                    "$ref": "#/definitions/handlers.variationResponse"
                },
                "variationGroupId": {
                    "type": "string"
                }
            }
        },
        "handlers.campaignsBodyContextSwagger": {
            "type": "object",
            "properties": {
                "key_bool": {
                    "type": "boolean"
                },
                "key_number": {
                    "type": "number"
                },
                "key_string": {
                    "type": "string"
                }
            }
        },
        "handlers.campaignsBodySwagger": {
            "type": "object",
            "required": [
                "visitor_id"
            ],
            "properties": {
                "anonymous_id": {
                    "type": "string"
                },
                "context": {
                    "$ref": "#/definitions/handlers.campaignsBodyContextSwagger"
                },
                "trigger_hit": {
                    "type": "boolean"
                },
                "visitor_consent": {
                    "type": "boolean"
                },
                "visitor_id": {
                    "type": "string"
                }
            }
        },
        "handlers.campaignsResponse": {
            "type": "object",
            "properties": {
                "campaigns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handlers.campaignResponse"
                    }
                },
                "panic": {
                    "type": "boolean"
                },
                "visitor_id": {
                    "type": "string"
                }
            }
        },
        "handlers.errorMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handlers.modificationResponse": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "value": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "handlers.variationResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "modifications": {
                    "$ref": "#/definitions/handlers.modificationResponse"
                },
                "reference": {
                    "type": "boolean"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "2.0",
	Host:        "",
	BasePath:    "/v2",
	Schemes:     []string{},
	Title:       "Flagship Decision API",
	Description: "This is the Flagship Decision API documentation",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
